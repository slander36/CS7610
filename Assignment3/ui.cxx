// generated by Fast Light User Interface Designer (fluid) version 1.0302

#include "ui.h"

void UserInterface::cb_Line_i(Fl_Check_Button*, void*) {
  viewing->drawLine();
Line->setonly();
}
void UserInterface::cb_Line(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Line_i(o,v);
}

void UserInterface::cb_Circle_i(Fl_Check_Button*, void*) {
  viewing->drawCircle();
Circle->setonly();
}
void UserInterface::cb_Circle(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Circle_i(o,v);
}

void UserInterface::cb_Clear_i(Fl_Button*, void*) {
  viewing->clearallvariables();
Line->clear();
Polyline->clear();
Circle->clear();
Polygon->clear();
}
void UserInterface::cb_Clear(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Clear_i(o,v);
}

void UserInterface::cb_Polyline_i(Fl_Check_Button*, void*) {
  viewing->drawPolyline();
Polyline->setonly();
}
void UserInterface::cb_Polyline(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polyline_i(o,v);
}

void UserInterface::cb_Show_i(Fl_Button*, void*) {
  OutputWindow->show();
}
void UserInterface::cb_Show(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Show_i(o,v);
}

void UserInterface::cb_Exit_i(Fl_Menu_*, void*) {
  OutputWindow->hide();
Mywindow->hide();
}
void UserInterface::cb_Exit(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Exit_i(o,v);
}

void UserInterface::cb_Simple_i(Fl_Menu_*, void*) {
  SimpleLineWindow->show();
}
void UserInterface::cb_Simple(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Simple_i(o,v);
}

void UserInterface::cb_Sample_i(Fl_Menu_*, void*) {
  viewing->drawLineSample();
Line->clear();
Circle->clear();
}
void UserInterface::cb_Sample(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sample_i(o,v);
}

void UserInterface::cb_Bowtie_i(Fl_Menu_*, void*) {
  viewing->drawLineBowtie();
Line->clear();
Circle->clear();
}
void UserInterface::cb_Bowtie(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Bowtie_i(o,v);
}

void UserInterface::cb_House_i(Fl_Menu_*, void*) {
  viewing->drawLineHouse();
Line->clear();
Circle->clear();
}
void UserInterface::cb_House(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_House_i(o,v);
}

void UserInterface::cb_Simple1_i(Fl_Menu_*, void*) {
  SimpleCircleWindow->show();
}
void UserInterface::cb_Simple1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Simple1_i(o,v);
}

void UserInterface::cb_Sample1_i(Fl_Menu_*, void*) {
  viewing->drawCircleSample();
}
void UserInterface::cb_Sample1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Sample1_i(o,v);
}

void UserInterface::cb_Polygon1_i(Fl_Menu_*, void*) {
  viewing->drawPolygon1();
}
void UserInterface::cb_Polygon1(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon1_i(o,v);
}

void UserInterface::cb_Polygon2_i(Fl_Menu_*, void*) {
  viewing->drawPolygon2();
}
void UserInterface::cb_Polygon2(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon2_i(o,v);
}

void UserInterface::cb_Polygon3_i(Fl_Menu_*, void*) {
  viewing->drawPolygon3();
}
void UserInterface::cb_Polygon3(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon3_i(o,v);
}

void UserInterface::cb_Polygon4_i(Fl_Menu_*, void*) {
  viewing->drawPolygon4();
}
void UserInterface::cb_Polygon4(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon4_i(o,v);
}

void UserInterface::cb_Polygon5_i(Fl_Menu_*, void*) {
  viewing->drawPolygon5();
}
void UserInterface::cb_Polygon5(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon5_i(o,v);
}

void UserInterface::cb_Polygon6_i(Fl_Menu_*, void*) {
  viewing->drawPolygon6();
}
void UserInterface::cb_Polygon6(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon6_i(o,v);
}

void UserInterface::cb_Polygon7_i(Fl_Menu_*, void*) {
  viewing->drawPolygon7();
}
void UserInterface::cb_Polygon7(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon7_i(o,v);
}

void UserInterface::cb_Polygon8_i(Fl_Menu_*, void*) {
  viewing->drawPolygon8();
}
void UserInterface::cb_Polygon8(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon8_i(o,v);
}

void UserInterface::cb_Polygon9_i(Fl_Menu_*, void*) {
  viewing->drawPolygon9();
}
void UserInterface::cb_Polygon9(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon9_i(o,v);
}

void UserInterface::cb_Color_i(Fl_Menu_*, void*) {
  ColorWindow->show();
}
void UserInterface::cb_Color(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Color_i(o,v);
}

void UserInterface::cb_Style_i(Fl_Menu_*, void*) {
  StyleWindow->show();
}
void UserInterface::cb_Style(Fl_Menu_* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Style_i(o,v);
}

Fl_Menu_Item UserInterface::menu_[] = {
 {"File", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Exit", 0x40071,  (Fl_Callback*)UserInterface::cb_Exit, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Draw", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Line", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Simple", 0,  (Fl_Callback*)UserInterface::cb_Simple, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sample", 0,  (Fl_Callback*)UserInterface::cb_Sample, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Bowtie", 0,  (Fl_Callback*)UserInterface::cb_Bowtie, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"House", 0,  (Fl_Callback*)UserInterface::cb_House, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Polyline", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Circle", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Simple", 0,  (Fl_Callback*)UserInterface::cb_Simple1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Sample", 0,  (Fl_Callback*)UserInterface::cb_Sample1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Polygon", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon1", 0,  (Fl_Callback*)UserInterface::cb_Polygon1, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon2", 0,  (Fl_Callback*)UserInterface::cb_Polygon2, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon3", 0,  (Fl_Callback*)UserInterface::cb_Polygon3, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon4", 0,  (Fl_Callback*)UserInterface::cb_Polygon4, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon5", 0,  (Fl_Callback*)UserInterface::cb_Polygon5, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon6", 0,  (Fl_Callback*)UserInterface::cb_Polygon6, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon7", 0,  (Fl_Callback*)UserInterface::cb_Polygon7, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon8", 0,  (Fl_Callback*)UserInterface::cb_Polygon8, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Polygon9", 0,  (Fl_Callback*)UserInterface::cb_Polygon9, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0},
 {"Options", 0,  0, 0, 64, FL_NORMAL_LABEL, 0, 14, 0},
 {"Color", 0,  (Fl_Callback*)UserInterface::cb_Color, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {"Style", 0,  (Fl_Callback*)UserInterface::cb_Style, 0, 0, FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};

void UserInterface::cb_Polygon_i(Fl_Check_Button*, void*) {
  viewing->drawPolygon();
Polygon->setonly();
}
void UserInterface::cb_Polygon(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Polygon_i(o,v);
}

void UserInterface::cb_Clear1_i(Fl_Button*, void*) {
  OutputTextDisplay->buffer()->text("");
}
void UserInterface::cb_Clear1(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Clear1_i(o,v);
}

void UserInterface::cb_PrintToggle_i(Fl_Check_Button*, void*) {
  viewing->print = PrintToggle->value();
}
void UserInterface::cb_PrintToggle(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_PrintToggle_i(o,v);
}

void UserInterface::cb_PrintSETToggle_i(Fl_Check_Button*, void*) {
  viewing->printSET = PrintSETToggle->value();
}
void UserInterface::cb_PrintSETToggle(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_PrintSETToggle_i(o,v);
}

void UserInterface::cb_PrintAETToggle_i(Fl_Check_Button*, void*) {
  viewing->printAET = PrintAETToggle->value();
}
void UserInterface::cb_PrintAETToggle(Fl_Check_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_PrintAETToggle_i(o,v);
}

void UserInterface::cb_SetEndLine_i(Fl_Button*, void*) {
  viewing->drawDialogEndingPointLine();
viewing->dialogStartX = StartX->value();
viewing->dialogStartY = StartY->value();
viewing->dialogEndX = EndX->value();
viewing->dialogEndY = EndY->value();
}
void UserInterface::cb_SetEndLine(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_SetEndLine_i(o,v);
}

void UserInterface::cb_Reset_i(Fl_Button*, void*) {
  StartX->value(0);
StartY->value(0);
EndX->value(0);
EndY->value(0);
}
void UserInterface::cb_Reset(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Reset_i(o,v);
}

void UserInterface::cb_Draw_i(Fl_Button*, void*) {
  viewing->dialogCircleX = CircleX->value();
viewing->dialogCircleY = CircleY->value();
viewing->dialogCircleR = CircleR->value();
viewing->drawDialogCircle();
}
void UserInterface::cb_Draw(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Draw_i(o,v);
}

void UserInterface::cb_Reset1_i(Fl_Button*, void*) {
  CircleX->value(0);
CircleY->value(0);
CircleR->value(0);
}
void UserInterface::cb_Reset1(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_Reset1_i(o,v);
}

void UserInterface::cb_ColorDropdown_i(Fl_Choice*, void*) {
  viewing->setColor(ColorDropdown->value());
}
void UserInterface::cb_ColorDropdown(Fl_Choice* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ColorDropdown_i(o,v);
}

void UserInterface::cb_ValueRed_i(Fl_Value_Input*, void*) {
  ColorDropdown->value(7);
viewing->colorValueRed = ValueRed->value();
ButtonSetColor->color(FL_GREEN);
ButtonSetColor->redraw();
}
void UserInterface::cb_ValueRed(Fl_Value_Input* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ValueRed_i(o,v);
}

void UserInterface::cb_ValueGreen_i(Fl_Value_Input*, void*) {
  ColorDropdown->value(7);
viewing->colorValueGreen = ValueGreen->value();
ButtonSetColor->color(FL_GREEN);
ButtonSetColor->redraw();
}
void UserInterface::cb_ValueGreen(Fl_Value_Input* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ValueGreen_i(o,v);
}

void UserInterface::cb_ValueBlue_i(Fl_Value_Input*, void*) {
  ColorDropdown->value(7);
viewing->colorValueBlue = ValueBlue->value();
ButtonSetColor->color(FL_GREEN);
ButtonSetColor->redraw();
}
void UserInterface::cb_ValueBlue(Fl_Value_Input* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ValueBlue_i(o,v);
}

void UserInterface::cb_ButtonSetColor_i(Fl_Button*, void*) {
  viewing->setColor();
ButtonSetColor->color(FL_BACKGROUND_COLOR);
ButtonSetColor->redraw();
}
void UserInterface::cb_ButtonSetColor(Fl_Button* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ButtonSetColor_i(o,v);
}

void UserInterface::cb_ThicknessSpinner_i(Fl_Spinner*, void*) {
  viewing->updateThickness(ThicknessSpinner->value());
}
void UserInterface::cb_ThicknessSpinner(Fl_Spinner* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_ThicknessSpinner_i(o,v);
}

void UserInterface::cb_LineStyleDropdown_i(Fl_Choice*, void*) {
  viewing->setLineStyle(LineStyleDropdown->value());
}
void UserInterface::cb_LineStyleDropdown(Fl_Choice* o, void* v) {
  ((UserInterface*)(o->parent()->user_data()))->cb_LineStyleDropdown_i(o,v);
}

UserInterface::UserInterface() {
  { Mywindow = new Fl_Window(492, 422, "FLTK Draw");
    Mywindow->color((Fl_Color)51);
    Mywindow->user_data((void*)(this));
    { viewing = new MyWindow(8, 30, 480, 320, "label");
      viewing->box(FL_NO_BOX);
      viewing->color(FL_BACKGROUND_COLOR);
      viewing->selection_color(FL_BACKGROUND_COLOR);
      viewing->labeltype(FL_NORMAL_LABEL);
      viewing->labelfont(0);
      viewing->labelsize(14);
      viewing->labelcolor(FL_FOREGROUND_COLOR);
      viewing->align(Fl_Align(FL_ALIGN_CENTER));
      viewing->when(FL_WHEN_RELEASE);
    } // MyWindow* viewing
    { Line = new Fl_Check_Button(10, 360, 60, 20, "Line");
      Line->type(102);
      Line->down_box(FL_DOWN_BOX);
      Line->callback((Fl_Callback*)cb_Line);
    } // Fl_Check_Button* Line
    { Circle = new Fl_Check_Button(150, 360, 60, 20, "circle");
      Circle->type(102);
      Circle->down_box(FL_DOWN_BOX);
      Circle->callback((Fl_Callback*)cb_Circle);
    } // Fl_Check_Button* Circle
    { Fl_Button* o = new Fl_Button(10, 390, 132, 32, "Clear Screen");
      o->down_box(FL_DOWN_BOX);
      o->color((Fl_Color)134);
      o->selection_color((Fl_Color)134);
      o->labelfont(1);
      o->callback((Fl_Callback*)cb_Clear);
    } // Fl_Button* o
    { Polyline = new Fl_Check_Button(80, 360, 60, 20, "Polyline");
      Polyline->type(102);
      Polyline->down_box(FL_DOWN_BOX);
      Polyline->callback((Fl_Callback*)cb_Polyline);
    } // Fl_Check_Button* Polyline
    { Fl_Button* o = new Fl_Button(152, 390, 100, 32, "Show Output");
      o->down_box(FL_DOWN_BOX);
      o->color((Fl_Color)134);
      o->selection_color((Fl_Color)134);
      o->labelfont(1);
      o->labelcolor(FL_GRAY0);
      o->callback((Fl_Callback*)cb_Show);
    } // Fl_Button* o
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 640, 20);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { Polygon = new Fl_Check_Button(220, 360, 60, 20, "Polygon");
      Polygon->type(102);
      Polygon->down_box(FL_DOWN_BOX);
      Polygon->callback((Fl_Callback*)cb_Polygon);
    } // Fl_Check_Button* Polygon
    Mywindow->end();
  } // Fl_Window* Mywindow
  { OutputWindow = new Fl_Window(239, 452, "Output");
    OutputWindow->user_data((void*)(this));
    { OutputTextDisplay = new Fl_Text_Display(10, 26, 220, 320, "Point Output");
      viewing->textDisplay = OutputTextDisplay;
      OutputTextDisplay->buffer(new Fl_Text_Buffer());
    } // Fl_Text_Display* OutputTextDisplay
    { Fl_Button* o = new Fl_Button(10, 356, 145, 28, "Clear Output");
      o->down_box(FL_DOWN_BOX);
      o->color((Fl_Color)134);
      o->selection_color((Fl_Color)134);
      o->labelfont(1);
      o->callback((Fl_Callback*)cb_Clear1);
    } // Fl_Button* o
    { PrintToggle = new Fl_Check_Button(170, 356, 60, 28, "Print");
      PrintToggle->down_box(FL_DOWN_BOX);
      PrintToggle->callback((Fl_Callback*)cb_PrintToggle);
      viewing->print = PrintToggle->value();
    } // Fl_Check_Button* PrintToggle
    { new Fl_Box(10, 394, 145, 16, "Polygon Only");
    } // Fl_Box* o
    { PrintSETToggle = new Fl_Check_Button(10, 420, 60, 28, "Print SET");
      PrintSETToggle->down_box(FL_DOWN_BOX);
      PrintSETToggle->callback((Fl_Callback*)cb_PrintSETToggle);
      viewing->printSET = PrintSETToggle->value();
    } // Fl_Check_Button* PrintSETToggle
    { PrintAETToggle = new Fl_Check_Button(95, 420, 60, 28, "Print AET");
      PrintAETToggle->down_box(FL_DOWN_BOX);
      PrintAETToggle->callback((Fl_Callback*)cb_PrintAETToggle);
      viewing->printAET = PrintAETToggle->value();
    } // Fl_Check_Button* PrintAETToggle
    OutputWindow->hide();
    OutputWindow->end();
  } // Fl_Window* OutputWindow
  { SimpleLineWindow = new Fl_Window(184, 264, "Simple Line");
    SimpleLineWindow->user_data((void*)(this));
    { Fl_Box* o = new Fl_Box(35, 10, 130, 32, "Start Point");
      o->labeltype(FL_ENGRAVED_LABEL);
    } // Fl_Box* o
    { Fl_Box* o = new Fl_Box(35, 120, 130, 32, "End Point");
      o->labeltype(FL_ENGRAVED_LABEL);
    } // Fl_Box* o
    { StartX = new Fl_Value_Input(55, 52, 112, 24, "X :");
      StartX->labeltype(FL_ENGRAVED_LABEL);
      StartX->minimum(-500);
      StartX->maximum(500);
      StartX->step(1);
      StartX->value(0);
    } // Fl_Value_Input* StartX
    { StartY = new Fl_Value_Input(55, 86, 112, 24, "Y :");
      StartY->labeltype(FL_ENGRAVED_LABEL);
      StartY->minimum(-500);
      StartY->maximum(500);
      StartY->step(1);
      StartY->value(0);
    } // Fl_Value_Input* StartY
    { EndX = new Fl_Value_Input(57, 162, 108, 24, "X :");
      EndX->labeltype(FL_ENGRAVED_LABEL);
      EndX->minimum(-500);
      EndX->maximum(500);
      EndX->step(1);
      EndX->value(0);
    } // Fl_Value_Input* EndX
    { EndY = new Fl_Value_Input(57, 198, 105, 24, "Y :");
      EndY->labeltype(FL_ENGRAVED_LABEL);
      EndY->minimum(-500);
      EndY->maximum(500);
      EndY->step(1);
      EndY->value(0);
    } // Fl_Value_Input* EndY
    { SetEndLine = new Fl_Button(35, 232, 60, 20, "Draw");
      SetEndLine->callback((Fl_Callback*)cb_SetEndLine);
    } // Fl_Button* SetEndLine
    { Fl_Button* o = new Fl_Button(105, 232, 60, 20, "Reset");
      o->callback((Fl_Callback*)cb_Reset);
    } // Fl_Button* o
    SimpleLineWindow->hide();
    SimpleLineWindow->end();
  } // Fl_Window* SimpleLineWindow
  { SimpleCircleWindow = new Fl_Window(202, 232, "Simple Circle");
    SimpleCircleWindow->user_data((void*)(this));
    { Fl_Box* o = new Fl_Box(35, 10, 130, 32, "Center");
      o->labeltype(FL_ENGRAVED_LABEL);
    } // Fl_Box* o
    { Fl_Box* o = new Fl_Box(35, 120, 130, 32, "Radius");
      o->labeltype(FL_ENGRAVED_LABEL);
    } // Fl_Box* o
    { CircleX = new Fl_Value_Input(55, 52, 112, 24, "X :");
      CircleX->labeltype(FL_ENGRAVED_LABEL);
      CircleX->minimum(-500);
      CircleX->maximum(500);
      CircleX->step(1);
      CircleX->value(0);
    } // Fl_Value_Input* CircleX
    { CircleY = new Fl_Value_Input(55, 86, 112, 24, "Y :");
      CircleY->labeltype(FL_ENGRAVED_LABEL);
      CircleY->minimum(-500);
      CircleY->maximum(500);
      CircleY->step(1);
      CircleY->value(0);
    } // Fl_Value_Input* CircleY
    { CircleR = new Fl_Value_Input(57, 162, 108, 24, "R :");
      CircleR->labeltype(FL_ENGRAVED_LABEL);
      CircleR->minimum(-500);
      CircleR->maximum(500);
      CircleR->step(1);
      CircleR->value(0);
    } // Fl_Value_Input* CircleR
    { Fl_Button* o = new Fl_Button(35, 196, 60, 20, "Draw");
      o->callback((Fl_Callback*)cb_Draw);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(105, 196, 60, 20, "Reset");
      o->callback((Fl_Callback*)cb_Reset1);
    } // Fl_Button* o
    SimpleCircleWindow->hide();
    SimpleCircleWindow->end();
  } // Fl_Window* SimpleCircleWindow
  { ColorWindow = new Fl_Window(216, 94, "Color");
    ColorWindow->user_data((void*)(this));
    { ColorDropdown = new Fl_Choice(56, 10, 82, 20, "Color: ");
      ColorDropdown->down_box(FL_BORDER_BOX);
      ColorDropdown->callback((Fl_Callback*)cb_ColorDropdown);
      ColorDropdown->add("White|Red|Green|Blue|Yellow|Cyan|Magenta|Custom");
      ColorDropdown->value(0);
    } // Fl_Choice* ColorDropdown
    { ValueRed = new Fl_Value_Input(166, 10, 48, 20, "R:");
      ValueRed->maximum(255);
      ValueRed->step(1);
      ValueRed->value(255);
      ValueRed->callback((Fl_Callback*)cb_ValueRed);
      viewing->widgetValueRed = ValueRed;
      ValueRed->value(255);
      viewing->colorValueRed = ValueRed->value();
    } // Fl_Value_Input* ValueRed
    { ValueGreen = new Fl_Value_Input(166, 40, 48, 20, "G:");
      ValueGreen->maximum(255);
      ValueGreen->step(1);
      ValueGreen->value(255);
      ValueGreen->callback((Fl_Callback*)cb_ValueGreen);
      viewing->widgetValueGreen = ValueGreen;
      ValueGreen->value(255);
      viewing->colorValueGreen = ValueGreen->value();
    } // Fl_Value_Input* ValueGreen
    { ValueBlue = new Fl_Value_Input(166, 70, 48, 20, "B:");
      ValueBlue->maximum(255);
      ValueBlue->step(1);
      ValueBlue->value(255);
      ValueBlue->callback((Fl_Callback*)cb_ValueBlue);
      viewing->widgetValueBlue = ValueBlue;
      ValueBlue->value(255);
      viewing->colorValueBlue = ValueBlue->value();
    } // Fl_Value_Input* ValueBlue
    { ButtonSetColor = new Fl_Button(12, 70, 126, 20, "Set Color");
      ButtonSetColor->callback((Fl_Callback*)cb_ButtonSetColor);
    } // Fl_Button* ButtonSetColor
    ColorWindow->hide();
    ColorWindow->end();
  } // Fl_Window* ColorWindow
  { StyleWindow = new Fl_Window(154, 62, "Style");
    StyleWindow->user_data((void*)(this));
    { ThicknessSpinner = new Fl_Spinner(89, 10, 61, 20, "Thickness:");
      ThicknessSpinner->maximum(20);
      ThicknessSpinner->callback((Fl_Callback*)cb_ThicknessSpinner);
      ThicknessSpinner->value(1);
      viewing->updateThickness(ThicknessSpinner->value());
    } // Fl_Spinner* ThicknessSpinner
    { LineStyleDropdown = new Fl_Choice(80, 40, 70, 20, "Line Style:");
      LineStyleDropdown->down_box(FL_BORDER_BOX);
      LineStyleDropdown->callback((Fl_Callback*)cb_LineStyleDropdown);
      LineStyleDropdown->add("Solid|Dashes|Dots|Mix");
      LineStyleDropdown->value(0);
      viewing->setLineStyle(LineStyleDropdown->value());
    } // Fl_Choice* LineStyleDropdown
    StyleWindow->hide();
    StyleWindow->end();
  } // Fl_Window* StyleWindow
}

void UserInterface::show() {
  Mywindow->show();
}
